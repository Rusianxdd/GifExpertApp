{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","proTypes","PropTypes","func","isRequired","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGMA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAClB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OAEQ,sBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAEvBR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,MAOf,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBU,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,aA6B/BZ,EAAYe,SAAW,CACnBd,cAAgBe,IAAUC,KAAKC,YAGpBlB,Q,+BCzCFmB,EAAO,uCAAG,WAAMT,GAAN,uBAAAU,EAAA,6DACbC,EADa,iDACmCC,UAAUZ,GAD7C,+DAEAa,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCaLO,EAXK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAG7B,OACI,sBAAKc,UAAU,gDAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QC8BDO,EAlCQ,SAAC,GAAgB,IAAf5B,EAAc,EAAdA,SAUrB,ECXwB,SAACA,GACzB,MAA0BR,mBAAS,CAC/BwB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAfAC,qBAAU,WACNvB,EAAQT,GACCiC,MAAK,SAAAC,GAGEH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAK9B,CAAC7B,IAGI8B,EDXwBK,CAAanC,GAAhCsB,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAIpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDzB,IAClD6B,GAAW,mBAAGJ,UAAU,mCAAb,sBACb,qBAAKA,UAAU,YAAf,SAIaH,EAAOJ,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEOlCgB,EA7BM,WAGjB,MAAoC5C,mBAAS,CAAC,gBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAMA,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC5B,uBACD,6BAEQ8C,EAAWnB,KAAI,SAAAlB,GAAQ,OAEnB,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCnB7BsC,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.facb4157.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({setcategories}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e)=>{\r\n\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        if(inputValue.trim().length>2){\r\n            //console.log('Submit hecho');\r\n             setcategories(category => [inputValue, ...category]);\r\n             setInputValue('');\r\n        }\r\n        \r\n    }\r\n    \r\n    return (\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange }\r\n                />\r\n            </form>\r\n  \r\n   \r\n     \r\n    )\r\n}\r\n\r\nAddCategory.proTypes = {\r\n    setcategories : PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=30MXPhQ9dHozRc2Tw6ifcAeGmXM385OD`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img=>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n  \r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDownBig\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n/*\r\n    const [images, setImages]= useState([]);\r\n    \r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(setImages);\r\n    },[category]);\r\n*/\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">loanding</p>}\r\n       <div className=\"card-grid\">\r\n            \r\n \r\n                {\r\n                    images.map(img => <GifGridItem \r\n                                        key={img.id}\r\n                                        {...img}\r\n                                        />)\r\n                }\r\n                \r\n    \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n       \r\n    useEffect(()=>{\r\n        getGifs(category)\r\n                .then(imgs =>{\r\n\r\n                    \r\n                        setState({\r\n                            data:imgs,\r\n                            loading:false\r\n                        });\r\n                  \r\n                   \r\n                })\r\n    },[category]);\r\n\r\n  \r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    \r\n    const [categories, setcategories] = useState(['Dragon Ball']);\r\n\r\n    /*const handleAdd = ()=>{\r\n       setcategories([...categories, 'Kimetsu no Yaiba']);\r\n    }*/\r\n    \r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>  \r\n          <AddCategory setcategories= {setcategories}/>         \r\n           <hr/>\r\n          <ol>\r\n              {\r\n                  categories.map(category =>(\r\n\r\n                      <GifGrid \r\n                        key={category}\r\n                        category={category}\r\n                      />\r\n                ))\r\n              }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}